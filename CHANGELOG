After 9 months of hard work, we're proud to announce the official release of Typo 5.4 Willy Ronis, the most advanced and user friendly blogging platform on Rails. Despite having a minor version number, Typo 5.4 is a major release, coming with a lot of new features and some bugfixes as Willy Ronis was a great photographer who died this year at the age of 99. Since Typo 5.4 fixes some major security issues, you should really think about upgrading.

Typo 5.4 is also a major release because we had many contributors from all over the world sending new features and fixes along this year. After contributing for a while, Matijs van Zuijlen (http://www.matijs.net/) finally joined the core team in late February and did a great job on this release. We would also like to thank, in alphabetical order: Diego Elio 'Flameeyes' Petten√≤, Edward Middleton, Erik Ostrom, Hans de Graaff, Jakob Skov-Pedersen, Kurt Werle, Michael Reinsch, Mike Mondragon, Wei Jen Lu, Yuka Ouka, jzellman, and mpagalan.

So, what's new in Typo 5.4? A lot of things

= A brand new theme
As we announced on our blog, Typo has now a default new theme. True Blue 3 is a port of the theme used at http://t37.net. Typographic is a great theme, but we needed something that would fit everyone's blog. Typographic is still proposed as a standard theme in Typo, but it's not the default theme anymore.

= A brand new admin
Once again, we've deeply changed the admin. It now comes in the same blue flavor we've been using on True Blue 3. Some things have moved, some others have disappeared. 

= Performances improvement
Performances improvement has been a huge part of the work on Typo 5.4. We followed 3 axes to give Typo better performances:
  * Switching to Rails 2.3.4 divided the memory footprint by 2 since a major bug was fixed in this release.
  * Removing lots of dead, legacy code made Typo slightly faster. It may break your theme though, but the changed are easy.
  * Switching from Ruby Bluecloth to C Bluecloth 2 has surprising effects on page generation speed. Generating a page with 4500 comments switched from more than 2 minutes to about 2 seconds on our testing machines.

= Autosave for all
Previsouly reserved to new posts only with the simple editor, autosave is now avaliable when you create and edit posts, on both simple and visual editor.

= New visual editor
Speaking of the visual editor, we've upgraded to the new CKEditor, aka FCKEditor 3. Lighter, producing better code, CKEditor is the new generation of visual web editors. CKEditor is now plugged to Typo resources engine, providing better backward compatibility with older blogs. Switch between simple and visual editor without losing content has also been fixed.

= Articles preview
A long awaited feature was the article preview during edition. It is now avaliable, so you can be sure of what you're going to publish.

= User creation simplified
Users creation from the front end has been simplified. You now just need to provide a login and an email, and you're done! 

= Users public profiles
Users public pages are back, coming with an improved profile, allowing you to display your msn, aim, or twitter id. You can also chose the name you'll display on screen, chosing from your login, real name, or anything else. Authors also have their RSS and Atom feed back. An author sidebar is now also avaliable.

= Chinese support
Simple Chinese joins the number of languages supported by Typo. Cool.

= Better Wordpress converter
Wordpress converter has been greatly improved, fixing lots of points that made the import incomplete: pages imported as article, spam comments considered as ham, blog name and subtitle not imported... Switching to Typo has never been easier.

= Secondary layout for pages
Lost of users have been asking for the possibility to define a secondary layout for pages. It's now done. Just add a pages.html.erb in your theme layout directory, mix some HTML and Ruby and you're done!

= Cache unification
Since we've fixed the static cache, we've decided to drop the cached model support along with the memcache support for cache model. It results in a lighter, simpler code, and less errors possible.